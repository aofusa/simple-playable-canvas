var c=Object.defineProperty;var f=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var a=(e,t,n)=>f(e,typeof t!="symbol"?t+"":t,n);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function n(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerPolicy&&(i.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?i.credentials="include":o.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=n(o);fetch(o.href,i)}})();const u={BG:"https://user-images.githubusercontent.com/18138131/36629884-12445790-19a0-11e8-8035-2f6c9e940f5c.png"};function d(e){return console.log("load image: ",e),new Promise((t,n)=>{const s=new Image;s.onload=()=>t(s),s.onerror=o=>n(o),s.src=e})}const r={right:!1,left:!1,up:!1,down:!1};document.addEventListener("keydown",y,!1);document.addEventListener("keyup",h,!1);function y(e){(e.key==="Right"||e.key==="ArrowRight"||e.key==="d")&&(console.log("right press"),r.right=!0),(e.key==="Left"||e.key==="ArrowLeft"||e.key==="a")&&(console.log("left press"),r.left=!0),(e.key==="Up"||e.key==="ArrowUp"||e.key==="w")&&(console.log("up press"),r.up=!0),(e.key==="Down"||e.key==="ArrowDown"||e.key==="s")&&(console.log("down press"),r.down=!0)}function h(e){(e.key==="Right"||e.key==="ArrowRight"||e.key==="d")&&(console.log("right release"),r.right=!1),(e.key==="Left"||e.key==="ArrowLeft"||e.key==="a")&&(console.log("left release"),r.left=!1),(e.key==="Up"||e.key==="ArrowUp"||e.key==="w")&&(console.log("up release"),r.up=!1),(e.key==="Down"||e.key==="ArrowDown"||e.key==="s")&&(console.log("down release"),r.down=!1)}class p{constructor(t,n,s,o){a(this,"x");a(this,"y");a(this,"width");a(this,"height");this.x=t,this.y=n,this.width=s,this.height=o}update(){r.right&&(this.x+=1),r.left&&(this.x-=1),r.up&&(this.y-=1),r.down&&(this.y+=1),console.log("dx: ",this.x,", dy: ",this.y)}draw(t){t.fillStyle="blue",t.fillRect(this.x,this.y,this.width,this.height)}}const g=1e3/60;async function w(e){const t=e.getContext("2d");if(!t)throw console.warn("not HTMLCanvasElement"),"initialize error: not HTMLCanvasElement";const n=await d(u.BG);console.log(n);const s=new p(10,10,100,100);return{canvasContext:t,image:n,playable:s}}function m(e){const t=e.canvasContext,n=t.canvas,s=e.image,o=e.playable;t.clearRect(0,0,n.width,n.height),t.drawImage(s,0,0,n.width,n.height),o.update(),o.draw(t)}async function k(e){const t=await w(e);setInterval(m,g,t)}function v(){const e=document.querySelector("#app-canvas");e?(console.log(e),k(e)):console.warn("#app-canvas not found")}v();
